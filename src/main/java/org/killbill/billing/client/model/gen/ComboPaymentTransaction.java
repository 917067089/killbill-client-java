/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.killbill.billing.client.model.gen.Account;
import org.killbill.billing.client.model.gen.PaymentMethod;
import org.killbill.billing.client.model.gen.PaymentTransaction;
import org.killbill.billing.client.model.gen.PluginProperty;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class ComboPaymentTransaction extends KillBillObject {

    private Account account = null;

    private PaymentMethod paymentMethod = null;

    private PaymentTransaction transaction = null;

    private List<PluginProperty> paymentMethodPluginProperties = null;

    private List<PluginProperty> transactionPluginProperties = null;

    private String transactionType = null;

    public ComboPaymentTransaction account(Account account) {
        this.account = account;
        return this;
    }

    
    public Account getAccount() {
        return account;
    }

    public void setAccount(Account account) {
        this.account = account;
    }

    public ComboPaymentTransaction paymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }

    
    public PaymentMethod getPaymentMethod() {
        return paymentMethod;
    }

    public void setPaymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    public ComboPaymentTransaction transaction(PaymentTransaction transaction) {
        this.transaction = transaction;
        return this;
    }

    
    public PaymentTransaction getTransaction() {
        return transaction;
    }

    public void setTransaction(PaymentTransaction transaction) {
        this.transaction = transaction;
    }

    public ComboPaymentTransaction paymentMethodPluginProperties(List<PluginProperty> paymentMethodPluginProperties) {
        this.paymentMethodPluginProperties = paymentMethodPluginProperties;
        return this;
    }

    public ComboPaymentTransaction addPaymentMethodPluginPropertiesItem(PluginProperty paymentMethodPluginPropertiesItem) {
        if (this.paymentMethodPluginProperties == null) {
            this.paymentMethodPluginProperties = new ArrayList<PluginProperty>();
        }
        this.paymentMethodPluginProperties.add(paymentMethodPluginPropertiesItem);
        return this;
    }

    
    public List<PluginProperty> getPaymentMethodPluginProperties() {
        return paymentMethodPluginProperties;
    }

    public void setPaymentMethodPluginProperties(List<PluginProperty> paymentMethodPluginProperties) {
        this.paymentMethodPluginProperties = paymentMethodPluginProperties;
    }

    public ComboPaymentTransaction transactionPluginProperties(List<PluginProperty> transactionPluginProperties) {
        this.transactionPluginProperties = transactionPluginProperties;
        return this;
    }

    public ComboPaymentTransaction addTransactionPluginPropertiesItem(PluginProperty transactionPluginPropertiesItem) {
        if (this.transactionPluginProperties == null) {
            this.transactionPluginProperties = new ArrayList<PluginProperty>();
        }
        this.transactionPluginProperties.add(transactionPluginPropertiesItem);
        return this;
    }

    
    public List<PluginProperty> getTransactionPluginProperties() {
        return transactionPluginProperties;
    }

    public void setTransactionPluginProperties(List<PluginProperty> transactionPluginProperties) {
        this.transactionPluginProperties = transactionPluginProperties;
    }

    public ComboPaymentTransaction transactionType(String transactionType) {
        this.transactionType = transactionType;
        return this;
    }

    
    public String getTransactionType() {
        return transactionType;
    }

    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComboPaymentTransaction comboPaymentTransaction = (ComboPaymentTransaction) o;
        return Objects.equals(this.account, comboPaymentTransaction.account) &&
        Objects.equals(this.paymentMethod, comboPaymentTransaction.paymentMethod) &&
        Objects.equals(this.transaction, comboPaymentTransaction.transaction) &&
        Objects.equals(this.paymentMethodPluginProperties, comboPaymentTransaction.paymentMethodPluginProperties) &&
        Objects.equals(this.transactionPluginProperties, comboPaymentTransaction.transactionPluginProperties) &&
        Objects.equals(this.transactionType, comboPaymentTransaction.transactionType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(account, paymentMethod, transaction, paymentMethodPluginProperties, transactionPluginProperties, transactionType);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComboPaymentTransaction {\n");
        
        sb.append("    account: ").append(toIndentedString(account)).append("\n");
        sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
        sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
        sb.append("    paymentMethodPluginProperties: ").append(toIndentedString(paymentMethodPluginProperties)).append("\n");
        sb.append("    transactionPluginProperties: ").append(toIndentedString(transactionPluginProperties)).append("\n");
        sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

