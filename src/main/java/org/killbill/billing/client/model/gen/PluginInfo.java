/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.killbill.billing.client.model.gen.PluginServiceInfo;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class PluginInfo extends KillBillObject {

    private String bundleSymbolicName = null;

    private String pluginKey = null;

    private String pluginName = null;

    private String version = null;

    private String state = null;

    private Boolean isSelectedForStart = false;

    private List<PluginServiceInfo> services = null;

    public PluginInfo bundleSymbolicName(String bundleSymbolicName) {
        this.bundleSymbolicName = bundleSymbolicName;
        return this;
    }

    
    public String getBundleSymbolicName() {
        return bundleSymbolicName;
    }

    public void setBundleSymbolicName(String bundleSymbolicName) {
        this.bundleSymbolicName = bundleSymbolicName;
    }

    public PluginInfo pluginKey(String pluginKey) {
        this.pluginKey = pluginKey;
        return this;
    }

    
    public String getPluginKey() {
        return pluginKey;
    }

    public void setPluginKey(String pluginKey) {
        this.pluginKey = pluginKey;
    }

    public PluginInfo pluginName(String pluginName) {
        this.pluginName = pluginName;
        return this;
    }

    
    public String getPluginName() {
        return pluginName;
    }

    public void setPluginName(String pluginName) {
        this.pluginName = pluginName;
    }

    public PluginInfo version(String version) {
        this.version = version;
        return this;
    }

    
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public PluginInfo state(String state) {
        this.state = state;
        return this;
    }

    
    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public PluginInfo isSelectedForStart(Boolean isSelectedForStart) {
        this.isSelectedForStart = isSelectedForStart;
        return this;
    }

    
    public Boolean isIsSelectedForStart() {
        return isSelectedForStart;
    }

    public void setIsSelectedForStart(Boolean isSelectedForStart) {
        this.isSelectedForStart = isSelectedForStart;
    }

    public PluginInfo services(List<PluginServiceInfo> services) {
        this.services = services;
        return this;
    }

    public PluginInfo addServicesItem(PluginServiceInfo servicesItem) {
        if (this.services == null) {
            this.services = new ArrayList<PluginServiceInfo>();
        }
        this.services.add(servicesItem);
        return this;
    }

    
    public List<PluginServiceInfo> getServices() {
        return services;
    }

    public void setServices(List<PluginServiceInfo> services) {
        this.services = services;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PluginInfo pluginInfo = (PluginInfo) o;
        return Objects.equals(this.bundleSymbolicName, pluginInfo.bundleSymbolicName) &&
        Objects.equals(this.pluginKey, pluginInfo.pluginKey) &&
        Objects.equals(this.pluginName, pluginInfo.pluginName) &&
        Objects.equals(this.version, pluginInfo.version) &&
        Objects.equals(this.state, pluginInfo.state) &&
        Objects.equals(this.isSelectedForStart, pluginInfo.isSelectedForStart) &&
        Objects.equals(this.services, pluginInfo.services);
    }

    @Override
    public int hashCode() {
        return Objects.hash(bundleSymbolicName, pluginKey, pluginName, version, state, isSelectedForStart, services);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PluginInfo {\n");
        
        sb.append("    bundleSymbolicName: ").append(toIndentedString(bundleSymbolicName)).append("\n");
        sb.append("    pluginKey: ").append(toIndentedString(pluginKey)).append("\n");
        sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    isSelectedForStart: ").append(toIndentedString(isSelectedForStart)).append("\n");
        sb.append("    services: ").append(toIndentedString(services)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

