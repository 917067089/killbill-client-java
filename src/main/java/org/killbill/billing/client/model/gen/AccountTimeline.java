/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.killbill.billing.client.model.gen.Account;
import org.killbill.billing.client.model.gen.Bundle;
import org.killbill.billing.client.model.gen.Invoice;
import org.killbill.billing.client.model.gen.InvoicePayment;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class AccountTimeline extends KillBillObject {

    private Account account = null;

    private List<Bundle> bundles = null;

    private List<Invoice> invoices = null;

    private List<InvoicePayment> payments = null;

    public AccountTimeline account(Account account) {
        this.account = account;
        return this;
    }

    
    public Account getAccount() {
        return account;
    }

    public void setAccount(Account account) {
        this.account = account;
    }

    public AccountTimeline bundles(List<Bundle> bundles) {
        this.bundles = bundles;
        return this;
    }

    public AccountTimeline addBundlesItem(Bundle bundlesItem) {
        if (this.bundles == null) {
            this.bundles = new ArrayList<Bundle>();
        }
        this.bundles.add(bundlesItem);
        return this;
    }

    
    public List<Bundle> getBundles() {
        return bundles;
    }

    public void setBundles(List<Bundle> bundles) {
        this.bundles = bundles;
    }

    public AccountTimeline invoices(List<Invoice> invoices) {
        this.invoices = invoices;
        return this;
    }

    public AccountTimeline addInvoicesItem(Invoice invoicesItem) {
        if (this.invoices == null) {
            this.invoices = new ArrayList<Invoice>();
        }
        this.invoices.add(invoicesItem);
        return this;
    }

    
    public List<Invoice> getInvoices() {
        return invoices;
    }

    public void setInvoices(List<Invoice> invoices) {
        this.invoices = invoices;
    }

    public AccountTimeline payments(List<InvoicePayment> payments) {
        this.payments = payments;
        return this;
    }

    public AccountTimeline addPaymentsItem(InvoicePayment paymentsItem) {
        if (this.payments == null) {
            this.payments = new ArrayList<InvoicePayment>();
        }
        this.payments.add(paymentsItem);
        return this;
    }

    
    public List<InvoicePayment> getPayments() {
        return payments;
    }

    public void setPayments(List<InvoicePayment> payments) {
        this.payments = payments;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountTimeline accountTimeline = (AccountTimeline) o;
        return Objects.equals(this.account, accountTimeline.account) &&
        Objects.equals(this.bundles, accountTimeline.bundles) &&
        Objects.equals(this.invoices, accountTimeline.invoices) &&
        Objects.equals(this.payments, accountTimeline.payments);
    }

    @Override
    public int hashCode() {
        return Objects.hash(account, bundles, invoices, payments);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountTimeline {\n");
        
        sb.append("    account: ").append(toIndentedString(account)).append("\n");
        sb.append("    bundles: ").append(toIndentedString(bundles)).append("\n");
        sb.append("    invoices: ").append(toIndentedString(invoices)).append("\n");
        sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

