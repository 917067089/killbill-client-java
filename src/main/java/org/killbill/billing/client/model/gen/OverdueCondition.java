/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.killbill.billing.client.model.gen.Duration;
import org.killbill.billing.payment.api.PaymentResponse;
import org.killbill.billing.util.tag.ControlTagType;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class OverdueCondition extends KillBillObject {

    private Duration timeSinceEarliestUnpaidInvoiceEqualsOrExceeds = null;

    private ControlTagType controlTagInclusion = null;

    private ControlTagType controlTagExclusion = null;

    private Integer numberOfUnpaidInvoicesEqualsOrExceeds = null;

    private List<PaymentResponse> responseForLastFailedPayment = null;

    private BigDecimal totalUnpaidInvoiceBalanceEqualsOrExceeds = null;

    public OverdueCondition timeSinceEarliestUnpaidInvoiceEqualsOrExceeds(Duration timeSinceEarliestUnpaidInvoiceEqualsOrExceeds) {
        this.timeSinceEarliestUnpaidInvoiceEqualsOrExceeds = timeSinceEarliestUnpaidInvoiceEqualsOrExceeds;
        return this;
    }

    
    public Duration getTimeSinceEarliestUnpaidInvoiceEqualsOrExceeds() {
        return timeSinceEarliestUnpaidInvoiceEqualsOrExceeds;
    }

    public void setTimeSinceEarliestUnpaidInvoiceEqualsOrExceeds(Duration timeSinceEarliestUnpaidInvoiceEqualsOrExceeds) {
        this.timeSinceEarliestUnpaidInvoiceEqualsOrExceeds = timeSinceEarliestUnpaidInvoiceEqualsOrExceeds;
    }

    public OverdueCondition controlTagInclusion(ControlTagType controlTagInclusion) {
        this.controlTagInclusion = controlTagInclusion;
        return this;
    }

    
    public ControlTagType getControlTagInclusion() {
        return controlTagInclusion;
    }

    public void setControlTagInclusion(ControlTagType controlTagInclusion) {
        this.controlTagInclusion = controlTagInclusion;
    }

    public OverdueCondition controlTagExclusion(ControlTagType controlTagExclusion) {
        this.controlTagExclusion = controlTagExclusion;
        return this;
    }

    
    public ControlTagType getControlTagExclusion() {
        return controlTagExclusion;
    }

    public void setControlTagExclusion(ControlTagType controlTagExclusion) {
        this.controlTagExclusion = controlTagExclusion;
    }

    public OverdueCondition numberOfUnpaidInvoicesEqualsOrExceeds(Integer numberOfUnpaidInvoicesEqualsOrExceeds) {
        this.numberOfUnpaidInvoicesEqualsOrExceeds = numberOfUnpaidInvoicesEqualsOrExceeds;
        return this;
    }

    
    public Integer getNumberOfUnpaidInvoicesEqualsOrExceeds() {
        return numberOfUnpaidInvoicesEqualsOrExceeds;
    }

    public void setNumberOfUnpaidInvoicesEqualsOrExceeds(Integer numberOfUnpaidInvoicesEqualsOrExceeds) {
        this.numberOfUnpaidInvoicesEqualsOrExceeds = numberOfUnpaidInvoicesEqualsOrExceeds;
    }

    public OverdueCondition responseForLastFailedPayment(List<PaymentResponse> responseForLastFailedPayment) {
        this.responseForLastFailedPayment = responseForLastFailedPayment;
        return this;
    }

    public OverdueCondition addResponseForLastFailedPaymentItem(PaymentResponse responseForLastFailedPaymentItem) {
        if (this.responseForLastFailedPayment == null) {
            this.responseForLastFailedPayment = new ArrayList<PaymentResponse>();
        }
        this.responseForLastFailedPayment.add(responseForLastFailedPaymentItem);
        return this;
    }

    
    public List<PaymentResponse> getResponseForLastFailedPayment() {
        return responseForLastFailedPayment;
    }

    public void setResponseForLastFailedPayment(List<PaymentResponse> responseForLastFailedPayment) {
        this.responseForLastFailedPayment = responseForLastFailedPayment;
    }

    public OverdueCondition totalUnpaidInvoiceBalanceEqualsOrExceeds(BigDecimal totalUnpaidInvoiceBalanceEqualsOrExceeds) {
        this.totalUnpaidInvoiceBalanceEqualsOrExceeds = totalUnpaidInvoiceBalanceEqualsOrExceeds;
        return this;
    }

    
    public BigDecimal getTotalUnpaidInvoiceBalanceEqualsOrExceeds() {
        return totalUnpaidInvoiceBalanceEqualsOrExceeds;
    }

    public void setTotalUnpaidInvoiceBalanceEqualsOrExceeds(BigDecimal totalUnpaidInvoiceBalanceEqualsOrExceeds) {
        this.totalUnpaidInvoiceBalanceEqualsOrExceeds = totalUnpaidInvoiceBalanceEqualsOrExceeds;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OverdueCondition overdueCondition = (OverdueCondition) o;
        return Objects.equals(this.timeSinceEarliestUnpaidInvoiceEqualsOrExceeds, overdueCondition.timeSinceEarliestUnpaidInvoiceEqualsOrExceeds) &&
        Objects.equals(this.controlTagInclusion, overdueCondition.controlTagInclusion) &&
        Objects.equals(this.controlTagExclusion, overdueCondition.controlTagExclusion) &&
        Objects.equals(this.numberOfUnpaidInvoicesEqualsOrExceeds, overdueCondition.numberOfUnpaidInvoicesEqualsOrExceeds) &&
        Objects.equals(this.responseForLastFailedPayment, overdueCondition.responseForLastFailedPayment) &&
        Objects.equals(this.totalUnpaidInvoiceBalanceEqualsOrExceeds, overdueCondition.totalUnpaidInvoiceBalanceEqualsOrExceeds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(timeSinceEarliestUnpaidInvoiceEqualsOrExceeds, controlTagInclusion, controlTagExclusion, numberOfUnpaidInvoicesEqualsOrExceeds, responseForLastFailedPayment, totalUnpaidInvoiceBalanceEqualsOrExceeds);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OverdueCondition {\n");
        
        sb.append("    timeSinceEarliestUnpaidInvoiceEqualsOrExceeds: ").append(toIndentedString(timeSinceEarliestUnpaidInvoiceEqualsOrExceeds)).append("\n");
        sb.append("    controlTagInclusion: ").append(toIndentedString(controlTagInclusion)).append("\n");
        sb.append("    controlTagExclusion: ").append(toIndentedString(controlTagExclusion)).append("\n");
        sb.append("    numberOfUnpaidInvoicesEqualsOrExceeds: ").append(toIndentedString(numberOfUnpaidInvoicesEqualsOrExceeds)).append("\n");
        sb.append("    responseForLastFailedPayment: ").append(toIndentedString(responseForLastFailedPayment)).append("\n");
        sb.append("    totalUnpaidInvoiceBalanceEqualsOrExceeds: ").append(toIndentedString(totalUnpaidInvoiceBalanceEqualsOrExceeds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

