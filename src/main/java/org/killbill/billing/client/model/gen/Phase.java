/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.List;
import org.killbill.billing.client.model.gen.Duration;
import org.killbill.billing.client.model.gen.Price;
import org.killbill.billing.client.model.gen.Usage;

import java.util.ArrayList;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class Phase extends KillBillObject {

    private String type = null;

    private List<Price> prices = null;

    private List<Price> fixedPrices = null;

    private Duration duration = null;

    private List<Usage> usages = null;

    public Phase type(String type) {
        this.type = type;
        return this;
    }

    
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Phase prices(List<Price> prices) {
        this.prices = prices;
        return this;
    }

    public Phase addPricesItem(Price pricesItem) {
        if (this.prices == null) {
            this.prices = new ArrayList<Price>();
        }
        this.prices.add(pricesItem);
        return this;
    }

    
    public List<Price> getPrices() {
        return prices;
    }

    public void setPrices(List<Price> prices) {
        this.prices = prices;
    }

    public Phase fixedPrices(List<Price> fixedPrices) {
        this.fixedPrices = fixedPrices;
        return this;
    }

    public Phase addFixedPricesItem(Price fixedPricesItem) {
        if (this.fixedPrices == null) {
            this.fixedPrices = new ArrayList<Price>();
        }
        this.fixedPrices.add(fixedPricesItem);
        return this;
    }

    
    public List<Price> getFixedPrices() {
        return fixedPrices;
    }

    public void setFixedPrices(List<Price> fixedPrices) {
        this.fixedPrices = fixedPrices;
    }

    public Phase duration(Duration duration) {
        this.duration = duration;
        return this;
    }

    
    public Duration getDuration() {
        return duration;
    }

    public void setDuration(Duration duration) {
        this.duration = duration;
    }

    public Phase usages(List<Usage> usages) {
        this.usages = usages;
        return this;
    }

    public Phase addUsagesItem(Usage usagesItem) {
        if (this.usages == null) {
            this.usages = new ArrayList<Usage>();
        }
        this.usages.add(usagesItem);
        return this;
    }

    
    public List<Usage> getUsages() {
        return usages;
    }

    public void setUsages(List<Usage> usages) {
        this.usages = usages;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Phase phase = (Phase) o;
        return Objects.equals(this.type, phase.type) &&
        Objects.equals(this.prices, phase.prices) &&
        Objects.equals(this.fixedPrices, phase.fixedPrices) &&
        Objects.equals(this.duration, phase.duration) &&
        Objects.equals(this.usages, phase.usages);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, prices, fixedPrices, duration, usages);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Phase {\n");
        
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
        sb.append("    fixedPrices: ").append(toIndentedString(fixedPrices)).append("\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    usages: ").append(toIndentedString(usages)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

