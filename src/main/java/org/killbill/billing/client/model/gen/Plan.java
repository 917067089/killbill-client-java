/*
 * Copyright 2014-2018 Groupon, Inc
 * Copyright 2014-2018 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import org.killbill.billing.catalog.api.BillingMode;
import org.killbill.billing.catalog.api.BillingPeriod;
import org.killbill.billing.client.model.gen.IteratorPlanPhase;
import org.killbill.billing.client.model.gen.PlanPhase;
import org.killbill.billing.client.model.gen.Product;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class Plan extends KillBillObject {

    private Product product = null;

    private BillingMode recurringBillingMode = null;

    private List<PlanPhase> initialPhases = null;

    private String priceListName = null;

    private IteratorPlanPhase initialPhaseIterator = null;

    private PlanPhase finalPhase = null;

    private BillingPeriod recurringBillingPeriod = null;

    private Integer plansAllowedInBundle = null;

    private List<PlanPhase> allPhases = null;

    private DateTime effectiveDateForExistingSubscriptions = null;

    private String name = null;

    private String prettyName = null;

    public Plan product(Product product) {
        this.product = product;
        return this;
    }

    
    public Product getProduct() {
        return product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }

    public Plan recurringBillingMode(BillingMode recurringBillingMode) {
        this.recurringBillingMode = recurringBillingMode;
        return this;
    }

    
    public BillingMode getRecurringBillingMode() {
        return recurringBillingMode;
    }

    public void setRecurringBillingMode(BillingMode recurringBillingMode) {
        this.recurringBillingMode = recurringBillingMode;
    }

    public Plan initialPhases(List<PlanPhase> initialPhases) {
        this.initialPhases = initialPhases;
        return this;
    }

    public Plan addInitialPhasesItem(PlanPhase initialPhasesItem) {
        if (this.initialPhases == null) {
            this.initialPhases = new ArrayList<PlanPhase>();
        }
        this.initialPhases.add(initialPhasesItem);
        return this;
    }

    
    public List<PlanPhase> getInitialPhases() {
        return initialPhases;
    }

    public void setInitialPhases(List<PlanPhase> initialPhases) {
        this.initialPhases = initialPhases;
    }

    public Plan priceListName(String priceListName) {
        this.priceListName = priceListName;
        return this;
    }

    
    public String getPriceListName() {
        return priceListName;
    }

    public void setPriceListName(String priceListName) {
        this.priceListName = priceListName;
    }

    public Plan initialPhaseIterator(IteratorPlanPhase initialPhaseIterator) {
        this.initialPhaseIterator = initialPhaseIterator;
        return this;
    }

    
    public IteratorPlanPhase getInitialPhaseIterator() {
        return initialPhaseIterator;
    }

    public void setInitialPhaseIterator(IteratorPlanPhase initialPhaseIterator) {
        this.initialPhaseIterator = initialPhaseIterator;
    }

    public Plan finalPhase(PlanPhase finalPhase) {
        this.finalPhase = finalPhase;
        return this;
    }

    
    public PlanPhase getFinalPhase() {
        return finalPhase;
    }

    public void setFinalPhase(PlanPhase finalPhase) {
        this.finalPhase = finalPhase;
    }

    public Plan recurringBillingPeriod(BillingPeriod recurringBillingPeriod) {
        this.recurringBillingPeriod = recurringBillingPeriod;
        return this;
    }

    
    public BillingPeriod getRecurringBillingPeriod() {
        return recurringBillingPeriod;
    }

    public void setRecurringBillingPeriod(BillingPeriod recurringBillingPeriod) {
        this.recurringBillingPeriod = recurringBillingPeriod;
    }

    public Plan plansAllowedInBundle(Integer plansAllowedInBundle) {
        this.plansAllowedInBundle = plansAllowedInBundle;
        return this;
    }

    
    public Integer getPlansAllowedInBundle() {
        return plansAllowedInBundle;
    }

    public void setPlansAllowedInBundle(Integer plansAllowedInBundle) {
        this.plansAllowedInBundle = plansAllowedInBundle;
    }

    public Plan allPhases(List<PlanPhase> allPhases) {
        this.allPhases = allPhases;
        return this;
    }

    public Plan addAllPhasesItem(PlanPhase allPhasesItem) {
        if (this.allPhases == null) {
            this.allPhases = new ArrayList<PlanPhase>();
        }
        this.allPhases.add(allPhasesItem);
        return this;
    }

    
    public List<PlanPhase> getAllPhases() {
        return allPhases;
    }

    public void setAllPhases(List<PlanPhase> allPhases) {
        this.allPhases = allPhases;
    }

    public Plan effectiveDateForExistingSubscriptions(DateTime effectiveDateForExistingSubscriptions) {
        this.effectiveDateForExistingSubscriptions = effectiveDateForExistingSubscriptions;
        return this;
    }

    
    public DateTime getEffectiveDateForExistingSubscriptions() {
        return effectiveDateForExistingSubscriptions;
    }

    public void setEffectiveDateForExistingSubscriptions(DateTime effectiveDateForExistingSubscriptions) {
        this.effectiveDateForExistingSubscriptions = effectiveDateForExistingSubscriptions;
    }

    public Plan name(String name) {
        this.name = name;
        return this;
    }

    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Plan prettyName(String prettyName) {
        this.prettyName = prettyName;
        return this;
    }

    
    public String getPrettyName() {
        return prettyName;
    }

    public void setPrettyName(String prettyName) {
        this.prettyName = prettyName;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Plan plan = (Plan) o;
        return Objects.equals(this.product, plan.product) &&
        Objects.equals(this.recurringBillingMode, plan.recurringBillingMode) &&
        Objects.equals(this.initialPhases, plan.initialPhases) &&
        Objects.equals(this.priceListName, plan.priceListName) &&
        Objects.equals(this.initialPhaseIterator, plan.initialPhaseIterator) &&
        Objects.equals(this.finalPhase, plan.finalPhase) &&
        Objects.equals(this.recurringBillingPeriod, plan.recurringBillingPeriod) &&
        Objects.equals(this.plansAllowedInBundle, plan.plansAllowedInBundle) &&
        Objects.equals(this.allPhases, plan.allPhases) &&
        Objects.equals(this.effectiveDateForExistingSubscriptions, plan.effectiveDateForExistingSubscriptions) &&
        Objects.equals(this.name, plan.name) &&
        Objects.equals(this.prettyName, plan.prettyName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(product, recurringBillingMode, initialPhases, priceListName, initialPhaseIterator, finalPhase, recurringBillingPeriod, plansAllowedInBundle, allPhases, effectiveDateForExistingSubscriptions, name, prettyName);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Plan {\n");
        
        sb.append("    product: ").append(toIndentedString(product)).append("\n");
        sb.append("    recurringBillingMode: ").append(toIndentedString(recurringBillingMode)).append("\n");
        sb.append("    initialPhases: ").append(toIndentedString(initialPhases)).append("\n");
        sb.append("    priceListName: ").append(toIndentedString(priceListName)).append("\n");
        sb.append("    initialPhaseIterator: ").append(toIndentedString(initialPhaseIterator)).append("\n");
        sb.append("    finalPhase: ").append(toIndentedString(finalPhase)).append("\n");
        sb.append("    recurringBillingPeriod: ").append(toIndentedString(recurringBillingPeriod)).append("\n");
        sb.append("    plansAllowedInBundle: ").append(toIndentedString(plansAllowedInBundle)).append("\n");
        sb.append("    allPhases: ").append(toIndentedString(allPhases)).append("\n");
        sb.append("    effectiveDateForExistingSubscriptions: ").append(toIndentedString(effectiveDateForExistingSubscriptions)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    prettyName: ").append(toIndentedString(prettyName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

