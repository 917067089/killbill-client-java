/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.joda.time.DateTime;
import org.killbill.billing.catalog.api.Currency;
import org.killbill.billing.client.model.gen.PluginProperty;
import org.killbill.billing.payment.api.TransactionType;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class PaymentAttempt extends KillBillObject {

    private UUID accountId = null;

    private UUID paymentMethodId = null;

    private String paymentExternalKey = null;

    private UUID transactionId = null;

    private String transactionExternalKey = null;

    private TransactionType transactionType = null;

    private DateTime effectiveDate = null;

    private String stateName = null;

    private BigDecimal amount = null;

    private Currency currency = null;

    private String pluginName = null;

    private List<PluginProperty> pluginProperties = null;

    public PaymentAttempt accountId(UUID accountId) {
        this.accountId = accountId;
        return this;
    }

    
    public UUID getAccountId() {
        return accountId;
    }

    public void setAccountId(UUID accountId) {
        this.accountId = accountId;
    }

    public PaymentAttempt paymentMethodId(UUID paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    
    public UUID getPaymentMethodId() {
        return paymentMethodId;
    }

    public void setPaymentMethodId(UUID paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }

    public PaymentAttempt paymentExternalKey(String paymentExternalKey) {
        this.paymentExternalKey = paymentExternalKey;
        return this;
    }

    
    public String getPaymentExternalKey() {
        return paymentExternalKey;
    }

    public void setPaymentExternalKey(String paymentExternalKey) {
        this.paymentExternalKey = paymentExternalKey;
    }

    public PaymentAttempt transactionId(UUID transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    
    public UUID getTransactionId() {
        return transactionId;
    }

    public void setTransactionId(UUID transactionId) {
        this.transactionId = transactionId;
    }

    public PaymentAttempt transactionExternalKey(String transactionExternalKey) {
        this.transactionExternalKey = transactionExternalKey;
        return this;
    }

    
    public String getTransactionExternalKey() {
        return transactionExternalKey;
    }

    public void setTransactionExternalKey(String transactionExternalKey) {
        this.transactionExternalKey = transactionExternalKey;
    }

    public PaymentAttempt transactionType(TransactionType transactionType) {
        this.transactionType = transactionType;
        return this;
    }

    
    public TransactionType getTransactionType() {
        return transactionType;
    }

    public void setTransactionType(TransactionType transactionType) {
        this.transactionType = transactionType;
    }

    public PaymentAttempt effectiveDate(DateTime effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }

    
    public DateTime getEffectiveDate() {
        return effectiveDate;
    }

    public void setEffectiveDate(DateTime effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    public PaymentAttempt stateName(String stateName) {
        this.stateName = stateName;
        return this;
    }

    
    public String getStateName() {
        return stateName;
    }

    public void setStateName(String stateName) {
        this.stateName = stateName;
    }

    public PaymentAttempt amount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    
    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public PaymentAttempt currency(Currency currency) {
        this.currency = currency;
        return this;
    }

    
    public Currency getCurrency() {
        return currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    public PaymentAttempt pluginName(String pluginName) {
        this.pluginName = pluginName;
        return this;
    }

    
    public String getPluginName() {
        return pluginName;
    }

    public void setPluginName(String pluginName) {
        this.pluginName = pluginName;
    }

    public PaymentAttempt pluginProperties(List<PluginProperty> pluginProperties) {
        this.pluginProperties = pluginProperties;
        return this;
    }

    public PaymentAttempt addPluginPropertiesItem(PluginProperty pluginPropertiesItem) {
        if (this.pluginProperties == null) {
            this.pluginProperties = new ArrayList<PluginProperty>();
        }
        this.pluginProperties.add(pluginPropertiesItem);
        return this;
    }

    
    public List<PluginProperty> getPluginProperties() {
        return pluginProperties;
    }

    public void setPluginProperties(List<PluginProperty> pluginProperties) {
        this.pluginProperties = pluginProperties;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaymentAttempt paymentAttempt = (PaymentAttempt) o;
        return Objects.equals(this.accountId, paymentAttempt.accountId) &&
        Objects.equals(this.paymentMethodId, paymentAttempt.paymentMethodId) &&
        Objects.equals(this.paymentExternalKey, paymentAttempt.paymentExternalKey) &&
        Objects.equals(this.transactionId, paymentAttempt.transactionId) &&
        Objects.equals(this.transactionExternalKey, paymentAttempt.transactionExternalKey) &&
        Objects.equals(this.transactionType, paymentAttempt.transactionType) &&
        Objects.equals(this.effectiveDate, paymentAttempt.effectiveDate) &&
        Objects.equals(this.stateName, paymentAttempt.stateName) &&
        Objects.equals(this.amount, paymentAttempt.amount) &&
        Objects.equals(this.currency, paymentAttempt.currency) &&
        Objects.equals(this.pluginName, paymentAttempt.pluginName) &&
        Objects.equals(this.pluginProperties, paymentAttempt.pluginProperties);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, paymentMethodId, paymentExternalKey, transactionId, transactionExternalKey, transactionType, effectiveDate, stateName, amount, currency, pluginName, pluginProperties);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PaymentAttempt {\n");
        
        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
        sb.append("    paymentExternalKey: ").append(toIndentedString(paymentExternalKey)).append("\n");
        sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
        sb.append("    transactionExternalKey: ").append(toIndentedString(transactionExternalKey)).append("\n");
        sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
        sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
        sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
        sb.append("    pluginProperties: ").append(toIndentedString(pluginProperties)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

