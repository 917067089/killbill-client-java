/*
 * Copyright 2014-2018 Groupon, Inc
 * Copyright 2014-2018 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.UUID;
import org.joda.time.DateTime;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class Account extends KillBillObject {

    private UUID accountId = null;

    private String name = null;

    private Integer firstNameLength = null;

    private String externalKey = null;

    private String email = null;

    private Integer billCycleDayLocal = null;

    private String currency = null;

    private UUID parentAccountId = null;

    private Boolean isPaymentDelegatedToParent = false;

    private UUID paymentMethodId = null;

    private DateTime referenceTime = null;

    private String timeZone = null;

    private String address1 = null;

    private String address2 = null;

    private String postalCode = null;

    private String company = null;

    private String city = null;

    private String state = null;

    private String country = null;

    private String locale = null;

    private String phone = null;

    private String notes = null;

    private Boolean isMigrated = false;

    private Boolean isNotifiedForInvoices = false;

    private BigDecimal accountBalance = null;

    private BigDecimal accountCBA = null;

    public Account accountId(UUID accountId) {
        this.accountId = accountId;
        return this;
    }

    
    public UUID getAccountId() {
        return accountId;
    }

    public void setAccountId(UUID accountId) {
        this.accountId = accountId;
    }

    public Account name(String name) {
        this.name = name;
        return this;
    }

    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Account firstNameLength(Integer firstNameLength) {
        this.firstNameLength = firstNameLength;
        return this;
    }

    
    public Integer getFirstNameLength() {
        return firstNameLength;
    }

    public void setFirstNameLength(Integer firstNameLength) {
        this.firstNameLength = firstNameLength;
    }

    public Account externalKey(String externalKey) {
        this.externalKey = externalKey;
        return this;
    }

    
    public String getExternalKey() {
        return externalKey;
    }

    public void setExternalKey(String externalKey) {
        this.externalKey = externalKey;
    }

    public Account email(String email) {
        this.email = email;
        return this;
    }

    
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Account billCycleDayLocal(Integer billCycleDayLocal) {
        this.billCycleDayLocal = billCycleDayLocal;
        return this;
    }

    
    public Integer getBillCycleDayLocal() {
        return billCycleDayLocal;
    }

    public void setBillCycleDayLocal(Integer billCycleDayLocal) {
        this.billCycleDayLocal = billCycleDayLocal;
    }

    public Account currency(String currency) {
        this.currency = currency;
        return this;
    }

    
    public String getCurrency() {
        return currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public Account parentAccountId(UUID parentAccountId) {
        this.parentAccountId = parentAccountId;
        return this;
    }

    
    public UUID getParentAccountId() {
        return parentAccountId;
    }

    public void setParentAccountId(UUID parentAccountId) {
        this.parentAccountId = parentAccountId;
    }

    public Account isPaymentDelegatedToParent(Boolean isPaymentDelegatedToParent) {
        this.isPaymentDelegatedToParent = isPaymentDelegatedToParent;
        return this;
    }

    
    public Boolean isIsPaymentDelegatedToParent() {
        return isPaymentDelegatedToParent;
    }

    public void setIsPaymentDelegatedToParent(Boolean isPaymentDelegatedToParent) {
        this.isPaymentDelegatedToParent = isPaymentDelegatedToParent;
    }

    public Account paymentMethodId(UUID paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    
    public UUID getPaymentMethodId() {
        return paymentMethodId;
    }

    public void setPaymentMethodId(UUID paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }

    public Account referenceTime(DateTime referenceTime) {
        this.referenceTime = referenceTime;
        return this;
    }

    
    public DateTime getReferenceTime() {
        return referenceTime;
    }

    public void setReferenceTime(DateTime referenceTime) {
        this.referenceTime = referenceTime;
    }

    public Account timeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    
    public String getTimeZone() {
        return timeZone;
    }

    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
    }

    public Account address1(String address1) {
        this.address1 = address1;
        return this;
    }

    
    public String getAddress1() {
        return address1;
    }

    public void setAddress1(String address1) {
        this.address1 = address1;
    }

    public Account address2(String address2) {
        this.address2 = address2;
        return this;
    }

    
    public String getAddress2() {
        return address2;
    }

    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    public Account postalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    
    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public Account company(String company) {
        this.company = company;
        return this;
    }

    
    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public Account city(String city) {
        this.city = city;
        return this;
    }

    
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Account state(String state) {
        this.state = state;
        return this;
    }

    
    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public Account country(String country) {
        this.country = country;
        return this;
    }

    
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public Account locale(String locale) {
        this.locale = locale;
        return this;
    }

    
    public String getLocale() {
        return locale;
    }

    public void setLocale(String locale) {
        this.locale = locale;
    }

    public Account phone(String phone) {
        this.phone = phone;
        return this;
    }

    
    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public Account notes(String notes) {
        this.notes = notes;
        return this;
    }

    
    public String getNotes() {
        return notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public Account isMigrated(Boolean isMigrated) {
        this.isMigrated = isMigrated;
        return this;
    }

    
    public Boolean isIsMigrated() {
        return isMigrated;
    }

    public void setIsMigrated(Boolean isMigrated) {
        this.isMigrated = isMigrated;
    }

    public Account isNotifiedForInvoices(Boolean isNotifiedForInvoices) {
        this.isNotifiedForInvoices = isNotifiedForInvoices;
        return this;
    }

    
    public Boolean isIsNotifiedForInvoices() {
        return isNotifiedForInvoices;
    }

    public void setIsNotifiedForInvoices(Boolean isNotifiedForInvoices) {
        this.isNotifiedForInvoices = isNotifiedForInvoices;
    }

    public Account accountBalance(BigDecimal accountBalance) {
        this.accountBalance = accountBalance;
        return this;
    }

    
    public BigDecimal getAccountBalance() {
        return accountBalance;
    }

    public void setAccountBalance(BigDecimal accountBalance) {
        this.accountBalance = accountBalance;
    }

    public Account accountCBA(BigDecimal accountCBA) {
        this.accountCBA = accountCBA;
        return this;
    }

    
    public BigDecimal getAccountCBA() {
        return accountCBA;
    }

    public void setAccountCBA(BigDecimal accountCBA) {
        this.accountCBA = accountCBA;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Account account = (Account) o;
        return Objects.equals(this.accountId, account.accountId) &&
        Objects.equals(this.name, account.name) &&
        Objects.equals(this.firstNameLength, account.firstNameLength) &&
        Objects.equals(this.externalKey, account.externalKey) &&
        Objects.equals(this.email, account.email) &&
        Objects.equals(this.billCycleDayLocal, account.billCycleDayLocal) &&
        Objects.equals(this.currency, account.currency) &&
        Objects.equals(this.parentAccountId, account.parentAccountId) &&
        Objects.equals(this.isPaymentDelegatedToParent, account.isPaymentDelegatedToParent) &&
        Objects.equals(this.paymentMethodId, account.paymentMethodId) &&
        Objects.equals(this.referenceTime, account.referenceTime) &&
        Objects.equals(this.timeZone, account.timeZone) &&
        Objects.equals(this.address1, account.address1) &&
        Objects.equals(this.address2, account.address2) &&
        Objects.equals(this.postalCode, account.postalCode) &&
        Objects.equals(this.company, account.company) &&
        Objects.equals(this.city, account.city) &&
        Objects.equals(this.state, account.state) &&
        Objects.equals(this.country, account.country) &&
        Objects.equals(this.locale, account.locale) &&
        Objects.equals(this.phone, account.phone) &&
        Objects.equals(this.notes, account.notes) &&
        Objects.equals(this.isMigrated, account.isMigrated) &&
        Objects.equals(this.isNotifiedForInvoices, account.isNotifiedForInvoices) &&
        Objects.equals(this.accountBalance, account.accountBalance) &&
        Objects.equals(this.accountCBA, account.accountCBA);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, name, firstNameLength, externalKey, email, billCycleDayLocal, currency, parentAccountId, isPaymentDelegatedToParent, paymentMethodId, referenceTime, timeZone, address1, address2, postalCode, company, city, state, country, locale, phone, notes, isMigrated, isNotifiedForInvoices, accountBalance, accountCBA);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Account {\n");
        
        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    firstNameLength: ").append(toIndentedString(firstNameLength)).append("\n");
        sb.append("    externalKey: ").append(toIndentedString(externalKey)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    billCycleDayLocal: ").append(toIndentedString(billCycleDayLocal)).append("\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    parentAccountId: ").append(toIndentedString(parentAccountId)).append("\n");
        sb.append("    isPaymentDelegatedToParent: ").append(toIndentedString(isPaymentDelegatedToParent)).append("\n");
        sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
        sb.append("    referenceTime: ").append(toIndentedString(referenceTime)).append("\n");
        sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
        sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
        sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    company: ").append(toIndentedString(company)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
        sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
        sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
        sb.append("    isMigrated: ").append(toIndentedString(isMigrated)).append("\n");
        sb.append("    isNotifiedForInvoices: ").append(toIndentedString(isNotifiedForInvoices)).append("\n");
        sb.append("    accountBalance: ").append(toIndentedString(accountBalance)).append("\n");
        sb.append("    accountCBA: ").append(toIndentedString(accountCBA)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

