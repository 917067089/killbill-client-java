/*
 * Kill Bill
 * Kill Bill is an open-source billing and payments platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class OverdueState extends KillBillObject {

    private String name = null;

    private String externalMessage = null;

    private List<Integer> daysBetweenPaymentRetries = null;

    private Boolean disableEntitlementAndChangesBlocked = false;

    private Boolean blockChanges = false;

    private Boolean clearState = false;

    private Integer reevaluationIntervalDays = null;

    public OverdueState name(String name) {
        this.name = name;
        return this;
    }

    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public OverdueState externalMessage(String externalMessage) {
        this.externalMessage = externalMessage;
        return this;
    }

    
    public String getExternalMessage() {
        return externalMessage;
    }

    public void setExternalMessage(String externalMessage) {
        this.externalMessage = externalMessage;
    }

    public OverdueState daysBetweenPaymentRetries(List<Integer> daysBetweenPaymentRetries) {
        this.daysBetweenPaymentRetries = daysBetweenPaymentRetries;
        return this;
    }

    public OverdueState addDaysBetweenPaymentRetriesItem(Integer daysBetweenPaymentRetriesItem) {
        if (this.daysBetweenPaymentRetries == null) {
            this.daysBetweenPaymentRetries = new ArrayList<Integer>();
        }
        this.daysBetweenPaymentRetries.add(daysBetweenPaymentRetriesItem);
        return this;
    }

    
    public List<Integer> getDaysBetweenPaymentRetries() {
        return daysBetweenPaymentRetries;
    }

    public void setDaysBetweenPaymentRetries(List<Integer> daysBetweenPaymentRetries) {
        this.daysBetweenPaymentRetries = daysBetweenPaymentRetries;
    }

    public OverdueState disableEntitlementAndChangesBlocked(Boolean disableEntitlementAndChangesBlocked) {
        this.disableEntitlementAndChangesBlocked = disableEntitlementAndChangesBlocked;
        return this;
    }

    
    public Boolean isDisableEntitlementAndChangesBlocked() {
        return disableEntitlementAndChangesBlocked;
    }

    public void setDisableEntitlementAndChangesBlocked(Boolean disableEntitlementAndChangesBlocked) {
        this.disableEntitlementAndChangesBlocked = disableEntitlementAndChangesBlocked;
    }

    public OverdueState blockChanges(Boolean blockChanges) {
        this.blockChanges = blockChanges;
        return this;
    }

    
    public Boolean isBlockChanges() {
        return blockChanges;
    }

    public void setBlockChanges(Boolean blockChanges) {
        this.blockChanges = blockChanges;
    }

    public OverdueState clearState(Boolean clearState) {
        this.clearState = clearState;
        return this;
    }

    
    public Boolean isClearState() {
        return clearState;
    }

    public void setClearState(Boolean clearState) {
        this.clearState = clearState;
    }

    public OverdueState reevaluationIntervalDays(Integer reevaluationIntervalDays) {
        this.reevaluationIntervalDays = reevaluationIntervalDays;
        return this;
    }

    
    public Integer getReevaluationIntervalDays() {
        return reevaluationIntervalDays;
    }

    public void setReevaluationIntervalDays(Integer reevaluationIntervalDays) {
        this.reevaluationIntervalDays = reevaluationIntervalDays;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OverdueState overdueState = (OverdueState) o;
        return Objects.equals(this.name, overdueState.name) &&
        Objects.equals(this.externalMessage, overdueState.externalMessage) &&
        Objects.equals(this.daysBetweenPaymentRetries, overdueState.daysBetweenPaymentRetries) &&
        Objects.equals(this.disableEntitlementAndChangesBlocked, overdueState.disableEntitlementAndChangesBlocked) &&
        Objects.equals(this.blockChanges, overdueState.blockChanges) &&
        Objects.equals(this.clearState, overdueState.clearState) &&
        Objects.equals(this.reevaluationIntervalDays, overdueState.reevaluationIntervalDays);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, externalMessage, daysBetweenPaymentRetries, disableEntitlementAndChangesBlocked, blockChanges, clearState, reevaluationIntervalDays);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OverdueState {\n");
        
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    externalMessage: ").append(toIndentedString(externalMessage)).append("\n");
        sb.append("    daysBetweenPaymentRetries: ").append(toIndentedString(daysBetweenPaymentRetries)).append("\n");
        sb.append("    disableEntitlementAndChangesBlocked: ").append(toIndentedString(disableEntitlementAndChangesBlocked)).append("\n");
        sb.append("    blockChanges: ").append(toIndentedString(blockChanges)).append("\n");
        sb.append("    clearState: ").append(toIndentedString(clearState)).append("\n");
        sb.append("    reevaluationIntervalDays: ").append(toIndentedString(reevaluationIntervalDays)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

