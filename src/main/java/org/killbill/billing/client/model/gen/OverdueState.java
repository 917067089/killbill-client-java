/*
 * Copyright 2014-2018 Groupon, Inc
 * Copyright 2014-2018 The Billing Project, LLC
 *
 * The Billing Project licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */


package org.killbill.billing.client.model.gen;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;

/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
import org.killbill.billing.client.model.KillBillObject;

public class OverdueState extends KillBillObject {

    private String name = null;

    private String externalMessage = null;

    private List<Integer> daysBetweenPaymentRetries = null;

    private Boolean disableEntitlementAndChangesBlocked = false;

    private Boolean blockChanges = false;

    private Boolean clearState = false;

    private Integer reevaluationIntervalDays = null;


    public OverdueState() {
    }

    public OverdueState(final String name,
                     final String externalMessage,
                     final List<Integer> daysBetweenPaymentRetries,
                     final Boolean disableEntitlementAndChangesBlocked,
                     final Boolean blockChanges,
                     final Boolean clearState,
                     final Integer reevaluationIntervalDays) {
        this.name = name;
        this.externalMessage = externalMessage;
        this.daysBetweenPaymentRetries = daysBetweenPaymentRetries;
        this.disableEntitlementAndChangesBlocked = disableEntitlementAndChangesBlocked;
        this.blockChanges = blockChanges;
        this.clearState = clearState;
        this.reevaluationIntervalDays = reevaluationIntervalDays;
    }

    public OverdueState setName(final String name) {
        this.name = name;
        return this;
    }

    public String getName() {
        return name;
    }

    public OverdueState setExternalMessage(final String externalMessage) {
        this.externalMessage = externalMessage;
        return this;
    }

    public String getExternalMessage() {
        return externalMessage;
    }

    public OverdueState setDaysBetweenPaymentRetries(final List<Integer> daysBetweenPaymentRetries) {
        this.daysBetweenPaymentRetries = daysBetweenPaymentRetries;
        return this;
    }

    public OverdueState addDaysBetweenPaymentRetriesItem(final Integer daysBetweenPaymentRetriesItem) {
        if (this.daysBetweenPaymentRetries == null) {
            this.daysBetweenPaymentRetries = new ArrayList<Integer>();
        }
        this.daysBetweenPaymentRetries.add(daysBetweenPaymentRetriesItem);
        return this;
    }

    public List<Integer> getDaysBetweenPaymentRetries() {
        return daysBetweenPaymentRetries;
    }

    public OverdueState setDisableEntitlementAndChangesBlocked(final Boolean disableEntitlementAndChangesBlocked) {
        this.disableEntitlementAndChangesBlocked = disableEntitlementAndChangesBlocked;
        return this;
    }

    public Boolean isDisableEntitlementAndChangesBlocked() {
        return disableEntitlementAndChangesBlocked;
    }

    public OverdueState setBlockChanges(final Boolean blockChanges) {
        this.blockChanges = blockChanges;
        return this;
    }

    public Boolean isBlockChanges() {
        return blockChanges;
    }

    public OverdueState setClearState(final Boolean clearState) {
        this.clearState = clearState;
        return this;
    }

    public Boolean isClearState() {
        return clearState;
    }

    public OverdueState setReevaluationIntervalDays(final Integer reevaluationIntervalDays) {
        this.reevaluationIntervalDays = reevaluationIntervalDays;
        return this;
    }

    public Integer getReevaluationIntervalDays() {
        return reevaluationIntervalDays;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OverdueState overdueState = (OverdueState) o;
        return Objects.equals(this.name, overdueState.name) &&
        Objects.equals(this.externalMessage, overdueState.externalMessage) &&
        Objects.equals(this.daysBetweenPaymentRetries, overdueState.daysBetweenPaymentRetries) &&
        Objects.equals(this.disableEntitlementAndChangesBlocked, overdueState.disableEntitlementAndChangesBlocked) &&
        Objects.equals(this.blockChanges, overdueState.blockChanges) &&
        Objects.equals(this.clearState, overdueState.clearState) &&
        Objects.equals(this.reevaluationIntervalDays, overdueState.reevaluationIntervalDays);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name,
                            externalMessage,
                            daysBetweenPaymentRetries,
                            disableEntitlementAndChangesBlocked,
                            blockChanges,
                            clearState,
                            reevaluationIntervalDays);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OverdueState {\n");
        
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    externalMessage: ").append(toIndentedString(externalMessage)).append("\n");
        sb.append("    daysBetweenPaymentRetries: ").append(toIndentedString(daysBetweenPaymentRetries)).append("\n");
        sb.append("    disableEntitlementAndChangesBlocked: ").append(toIndentedString(disableEntitlementAndChangesBlocked)).append("\n");
        sb.append("    blockChanges: ").append(toIndentedString(blockChanges)).append("\n");
        sb.append("    clearState: ").append(toIndentedString(clearState)).append("\n");
        sb.append("    reevaluationIntervalDays: ").append(toIndentedString(reevaluationIntervalDays)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

