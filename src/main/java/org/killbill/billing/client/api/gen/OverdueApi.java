package org.killbill.billing.client.api.gen;


import org.killbill.billing.client.model.gen.Overdue;


import com.google.common.collect.Multimap;
import com.google.common.base.Preconditions;
import com.google.common.collect.HashMultimap;
import com.google.common.base.MoreObjects;

import org.killbill.billing.client.KillBillClientException;
import org.killbill.billing.client.KillBillHttpClient;
import org.killbill.billing.client.RequestOptions;
import org.killbill.billing.util.api.AuditLevel;


/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
public class OverdueApi {

    private final KillBillHttpClient httpClient;

    public OverdueApi() {
        this(new KillBillHttpClient());
    }

    public OverdueApi(final KillBillHttpClient httpClient) {
        this.httpClient = httpClient;
    }

    public Overdue getOverdueConfigJson( final RequestOptions inputOptions) throws KillBillClientException {


        final String uri = "/1.0/kb/overdue";


        final RequestOptions requestOptions = inputOptions.extend().build();

        return httpClient.doGet(uri, Overdue.class, requestOptions);
    }

    public Overdue uploadOverdueConfigJson(final Overdue body,  final RequestOptions inputOptions) throws KillBillClientException {
        Preconditions.checkNotNull(body, "Missing the required parameter 'body' when calling uploadOverdueConfigJson");

        final String uri = "/1.0/kb/overdue";


        final Boolean followLocation = MoreObjects.firstNonNull(inputOptions.getFollowLocation(), Boolean.TRUE);
        final RequestOptions requestOptions = inputOptions.extend()
            .withFollowLocation(followLocation)
            .build();


        return httpClient.doPost(uri, body, Overdue.class, requestOptions);
    }

}
