package org.killbill.billing.client.api.gen;


import org.killbill.billing.client.model.gen.ComboHostedPaymentPage;
import org.killbill.billing.client.model.gen.HostedPaymentPageFields;
import org.killbill.billing.client.model.gen.HostedPaymentPageFormDescriptor;
import java.util.UUID;
import java.util.List;


import com.google.common.collect.Multimap;
import com.google.common.base.Preconditions;
import com.google.common.collect.HashMultimap;
import com.google.common.base.MoreObjects;

import org.killbill.billing.client.KillBillClientException;
import org.killbill.billing.client.KillBillHttpClient;
import org.killbill.billing.client.RequestOptions;
import org.killbill.billing.util.api.AuditLevel;


/**
 *           DO NOT EDIT !!!
 *
 * This code has been generated by the Kill Bill swagger generator.
 *  @See https://github.com/killbill/killbill-swagger-coden
 */
public class PaymentGatewayApi {

    private final KillBillHttpClient httpClient;

    public PaymentGatewayApi() {
        this(new KillBillHttpClient());
    }

    public PaymentGatewayApi(final KillBillHttpClient httpClient) {
        this.httpClient = httpClient;
    }

    public HostedPaymentPageFormDescriptor buildComboFormDescriptor(final ComboHostedPaymentPage body, final List<String> controlPluginName, final List<String> pluginProperty,  final RequestOptions inputOptions) throws KillBillClientException {
        Preconditions.checkNotNull(body, "Missing the required parameter 'body' when calling buildComboFormDescriptor");

        final String uri = "/1.0/kb/paymentGateways/hosted/form";

        final Multimap<String, String> queryParams = HashMultimap.<String, String>create(inputOptions.getQueryParams());
        queryParams.put("controlPluginName", String.valueOf(controlPluginName));
        queryParams.put("pluginProperty", String.valueOf(pluginProperty));

        final Boolean followLocation = MoreObjects.firstNonNull(inputOptions.getFollowLocation(), Boolean.TRUE);
        final RequestOptions requestOptions = inputOptions.extend()
            .withFollowLocation(followLocation)
            .withQueryParams(queryParams)
            .build();


        return httpClient.doPost(uri, body, HostedPaymentPageFormDescriptor.class, requestOptions);
    }

    public HostedPaymentPageFormDescriptor buildFormDescriptor(final HostedPaymentPageFields body, final UUID accountId, final UUID paymentMethodId, final List<String> controlPluginName, final List<String> pluginProperty,  final RequestOptions inputOptions) throws KillBillClientException {
        Preconditions.checkNotNull(body, "Missing the required parameter 'body' when calling buildFormDescriptor");
        Preconditions.checkNotNull(accountId, "Missing the required parameter 'accountId' when calling buildFormDescriptor");

        final String uri = "/1.0/kb/paymentGateways/hosted/form/{accountId}"
          .replaceAll("\\{" + "accountId" + "\\}", accountId.toString());

        final Multimap<String, String> queryParams = HashMultimap.<String, String>create(inputOptions.getQueryParams());
        queryParams.put("paymentMethodId", String.valueOf(paymentMethodId));
        queryParams.put("controlPluginName", String.valueOf(controlPluginName));
        queryParams.put("pluginProperty", String.valueOf(pluginProperty));

        final Boolean followLocation = MoreObjects.firstNonNull(inputOptions.getFollowLocation(), Boolean.TRUE);
        final RequestOptions requestOptions = inputOptions.extend()
            .withFollowLocation(followLocation)
            .withQueryParams(queryParams)
            .build();


        return httpClient.doPost(uri, body, HostedPaymentPageFormDescriptor.class, requestOptions);
    }

    public String processNotification(final String body, final String pluginName, final List<String> controlPluginName, final List<String> pluginProperty,  final RequestOptions inputOptions) throws KillBillClientException {
        Preconditions.checkNotNull(body, "Missing the required parameter 'body' when calling processNotification");
        Preconditions.checkNotNull(pluginName, "Missing the required parameter 'pluginName' when calling processNotification");

        final String uri = "/1.0/kb/paymentGateways/notification/{pluginName}"
          .replaceAll("\\{" + "pluginName" + "\\}", pluginName.toString());

        final Multimap<String, String> queryParams = HashMultimap.<String, String>create(inputOptions.getQueryParams());
        queryParams.put("controlPluginName", String.valueOf(controlPluginName));
        queryParams.put("pluginProperty", String.valueOf(pluginProperty));

        final Boolean followLocation = MoreObjects.firstNonNull(inputOptions.getFollowLocation(), Boolean.TRUE);
        final RequestOptions requestOptions = inputOptions.extend()
            .withFollowLocation(followLocation)
            .withQueryParams(queryParams)
            .build();


        return httpClient.doPost(uri, body, String.class, requestOptions);
    }

}
